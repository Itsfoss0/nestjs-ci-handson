version: 0.2

env:
  variables:
    ECR_REPOSITORY: "cloud-nestjs"
    ACCOUNT_ID: $(aws sts get-caller-identity --query Account --output text)
    IMAGE_TAG: latest
    REGION: "us-east-1"
    ECR_REGISTRY: $(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $REGION --query repositories[0].repositoryUri --output text)

phases:
  install:
    runtime-versions:
      nodejs: 18.x
    commands:
      - echo Done installing nodejs version 18 in environment

  build:
    commands:
      - echo Installing node modules...
      - npm ci
      - npm run build

  tests:
    on-failure: CONTINUE
    commands:
      - echo Running tests...
      - npm run test
    finally:
      - echo Tests completed...

  login_to_ecr:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      - echo Login to ECR successful...

  build_and_tag:
    commands:
      - echo Building and tagging docker image...
      - docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      - echo Successfully built and tagged docker image...

  smoke_test:
    commands:
      - >
        docker run -t -i -p 3000:3000 -d $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "Executing port test in 2 minutes..."
        sleep 120
        if curl --output /dev/null --silent --head --fail http://localhost:3000/health; then
          echo "Application is healthy."
          exit 0
        else
          echo "Application is not healthy."
          exit 1
        fi

  push_image:
    commands:
      - echo Pushing docker image to registry...
      - docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - echo "image=$ECR_REPOSITORY:$IMAGE_TAG"

artifacts:
  files:
    - dist/**/*
    - node_modules/**/*
    - package*.json
